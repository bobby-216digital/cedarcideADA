{%- liquid
  assign rtl_langs = 'ar,arc,dv,fa,ha,he,khw,ks,ku,ps,ur,yi' | split: ','
  assign current_lang = localization.language.iso_code | split: '-' | first
  if rtl_langs contains current_lang
    assign lang_dir = 'rtl'
  else
    assign lang_dir = 'ltr'
  endif
-%}
<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}" dir="{{ lang_dir }}">
<head>
  {%- render 'doc-head-core' -%}
  {%- render 'doc-head-social' -%}
  <meta name="google-site-verification" content="t3d-5V3NlFNt50I2ZevY_4YJO7TZwHVoqQAuUb778KQ" />
  {%- liquid
    assign base_font = settings.type_base_font
    assign base_font_bold = base_font | font_modify: 'weight', 'bolder'
    assign base_font_medium = base_font | font_modify: 'weight', '500'
    assign base_font_italic = base_font | font_modify: 'style', 'italic'
    assign base_font_bold_italic = base_font_bold | font_modify: 'style', 'italic'
    assign heading_font = settings.type_heading_font
    assign logo_font = settings.type_logo_font
    assign nav_font = settings.type_nav_font
    assign nav_font_600 = nav_font | font_modify: 'weight', '600'
  -%}

  <style>
    {{- base_font | font_face: font_display: 'fallback' -}}
    {{- base_font_bold | font_face: font_display: 'fallback' -}}
    {{- base_font_medium | font_face: font_display: 'fallback' -}}
    {{- base_font_italic | font_face: font_display: 'fallback' -}}
    {{- base_font_bold_italic | font_face: font_display: 'fallback' -}}
    {{- heading_font | font_face: font_display: 'fallback' -}}
    {{- logo_font | font_face: font_display: 'fallback' -}}
    {{- nav_font | font_face: font_display: 'fallback' -}}
    {{- nav_font_600 | font_face: font_display: 'fallback' -}}

    {%- render 'doc-head-styles' -%}
  </style>

  {{ 'main.css' | asset_url | stylesheet_tag: preload: true }}

  {%- if settings.swatch_enabled and settings.swatch_value_list != blank -%}
    <link rel="stylesheet" href="{{ 'swatches.css' | asset_url }}" media="print" onload="this.media='all'">
    <noscript><link rel="stylesheet" href="{{ 'swatches.css' | asset_url }}"></noscript>
  {%- endif -%}

  {%- unless base_font.system? -%}
    <link rel="preload" as="font" href="{{ base_font | font_url }}" type="font/woff2" crossorigin>
  {%- endunless -%}

  {%- unless heading_font.system? -%}
    <link rel="preload" as="font" href="{{ heading_font | font_url }}" type="font/woff2" crossorigin>
  {%- endunless -%}

  <script>
    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');

    window.theme = {
      info: {
        name: 'Symmetry',
        version: '7.0.1'
      },
      device: {
        hasTouch: window.matchMedia('(any-pointer: coarse)').matches,
        hasHover: window.matchMedia('(hover: hover)').matches
      },
      mediaQueries: {
        md: '(min-width: 768px)',
        productMediaCarouselBreak: '(min-width: 1041px)'
      },
      routes: {
        base: '{{ shop.url }}',
        cart: '{{ routes.cart_url }}',
        cartAdd: '{{ routes.cart_add_url }}.js',
        cartUpdate: '{{ routes.cart_update_url }}.js',
        predictiveSearch: '{{ routes.predictive_search_url }}'
      },
      strings: {
        cartTermsConfirmation: {{ 'cart.terms.confirmation' | t | json }},
        cartItemsQuantityError: {{ 'cart.items.quantity_error' | t: quantity: '[QUANTITY]' | json }},
        generalSearchViewAll: {{ 'general.search.view_all' | t | json }},
        noStock: {{ 'products.variant.no_stock' | t | json }},
        noVariant: {{ 'products.variant.non_existent' | t | json }},
        productsProductChooseA: {{ 'products.product.choose_a' | t | json }},
        generalSearchPages: {{ 'general.search.pages' | t | json }},
        generalSearchNoResultsWithoutTerms: {{ 'general.search.no_results_without_terms' | t | json }},
        shippingCalculator: {
          singleRate: {{ 'cart.shipping_calculator.single_rate' | t | json }},
          multipleRates: {{ 'cart.shipping_calculator.multiple_rates' | t | json }},
          noRates: {{ 'cart.shipping_calculator.no_rates' | t | json }}
        }
      },
      settings: {
        moneyWithCurrencyFormat: {{ shop.money_with_currency_format | json }},
        cartType: {{ settings.cart_type | json }},
        afterAddToCart: {{ settings.after_add_to_cart | json }},
        quickbuyStyle: {{ settings.quickbuy_style | json }},
        externalLinksNewTab: {{ settings.external_links_new_tab | json }},
        internalLinksSmoothScroll: {{ settings.internal_links_smooth_scroll | json }}
      }
    }

    theme.inlineNavigationCheck = function() {
      var pageHeader = document.querySelector('.pageheader'),
          inlineNavContainer = pageHeader.querySelector('.logo-area__left__inner'),
          inlineNav = inlineNavContainer.querySelector('.navigation--left');
      if (inlineNav && getComputedStyle(inlineNav).display != 'none') {
        var inlineMenuCentered = document.querySelector('.pageheader--layout-inline-menu-center'),
            logoContainer = document.querySelector('.logo-area__middle__inner');
        if(inlineMenuCentered) {
          var rightWidth = document.querySelector('.logo-area__right__inner').clientWidth,
              middleWidth = logoContainer.clientWidth,
              logoArea = document.querySelector('.logo-area'),
              computedLogoAreaStyle = getComputedStyle(logoArea),
              logoAreaInnerWidth = logoArea.clientWidth - Math.ceil(parseFloat(computedLogoAreaStyle.paddingLeft)) - Math.ceil(parseFloat(computedLogoAreaStyle.paddingRight)),
              availableNavWidth = logoAreaInnerWidth - Math.max(rightWidth, middleWidth) * 2 - 40;
          inlineNavContainer.style.maxWidth = availableNavWidth + 'px';
        }

        var firstInlineNavLink = inlineNav.querySelector('.navigation__item:first-child'),
            lastInlineNavLink = inlineNav.querySelector('.navigation__item:last-child');
        if (lastInlineNavLink) {
          var inlineNavWidth = null;
          if(document.querySelector('html[dir=rtl]')) {
            inlineNavWidth = firstInlineNavLink.offsetLeft - lastInlineNavLink.offsetLeft + firstInlineNavLink.offsetWidth;
          } else {
            inlineNavWidth = lastInlineNavLink.offsetLeft - firstInlineNavLink.offsetLeft + lastInlineNavLink.offsetWidth;
          }
          if (inlineNavContainer.offsetWidth >= inlineNavWidth) {
            pageHeader.classList.add('pageheader--layout-inline-permitted');
            var tallLogo = logoContainer.clientHeight > lastInlineNavLink.clientHeight + 20;
            if (tallLogo) {
              inlineNav.classList.add('navigation--tight-underline');
            } else {
              inlineNav.classList.remove('navigation--tight-underline');
            }
          } else {
            pageHeader.classList.remove('pageheader--layout-inline-permitted');
          }
        }
      }
    };

    theme.setInitialHeaderHeightProperty = () => {
      const section = document.querySelector('.section-header');
      if (section) {
        document.documentElement.style.setProperty('--theme-header-height', Math.ceil(section.clientHeight) + 'px');
      }
    };
  </script>

  <script src="{{ 'main.js' | asset_url }}" defer></script>

  {%- if request.design_mode -%}
    <script src="{{ 'theme-editor.js' | asset_url }}" defer></script>
  {%- endif -%}

  {% if settings.animations_enabled_desktop %}
    <script src="{{ 'animate-on-scroll.js' | asset_url }}" defer></script>
    {{ 'animate-on-scroll.css' | asset_url | stylesheet_tag: preload: true }}
  {% endif %}

  {{ content_for_header }}

  {%- if settings.custom_html_head -%}
    <!-- CC Custom Head Start -->
    {{- settings.custom_html_head -}}
    <!-- CC Custom Head End -->
  {%- endif -%}

<!-- Recharge SDK Start -->
  <script src="https://static.rechargecdn.com/assets/storefront/recharge-client-1.17.3.min.js"></script>
  <script>
    recharge.init({
      storeIdentifier: 'cedarcide-store.myshopify.com', // On Shopify this should be your myshopify.com domain
      // required for Storefront API access
      storefrontAccessToken: 'strfnt_9d26f6bc3567abb36054588d1f5467fbb30646be96c133c290a93ec12d143eef',
      loginRetryFn: () => {
        return recharge.auth.loginShopifyAppProxy().then(session => {
          return session;
        });
      }
    });
  </script>
<!-- Recharge SDK End -->
  
</head>

<body class="template-{{ template | split: '.' | first | handle }}
    {%- if template.suffix %} template-suffix-{{ template.suffix }}{% endif -%}
    {%- if settings.swatch_enabled %} swatch-method-{{ settings.swatch_method }} swatch-style-{{ settings.swatch_style }}{% endif -%}
    {%- if settings.animations_enabled_desktop %} cc-animate-enabled{% endif -%}
    ">

  <a class="skip-link" href="#content">{{ 'accessibility.skip_to_content' | t }}</a>

  {%- sections 'header-group' -%}

  <main id="content" role="main">
    <div class="container cf">

      {{ content_for_layout }}

    </div>
  </main>

  {%- if request.path != '/challenge' -%}
    <div id="pagefooter">
      {%- sections 'footer-group' -%}
    </div>

    {%- sections 'overlay-group' -%}
  {%- endif -%}


  <a href="#" class="page-shade" aria-label="{{ 'general.navigation.close' | t }}"></a>
  <div class="overlay fixed top-0 right-0 bottom-0 left-0 js-overlay"></div>

  {%- if settings.after_add_to_cart == 'notification' -%}
    <script src="{{ 'added-notification.js' | asset_url }}" defer></script>
    <template id="AddedNotification">
      <added-notification class="added-notification added-notification--hidden">
        <div class="added-notification__message-area">
          <div class="added-notification__message-title"></div>
          <div class="added-notification__message-text underline-child">{{ 'products.product.added_to_cart_with_link_html' | t: cart_url: routes.cart_url }}</div>
        </div>
        <div class="added-notification__button-area">
          <button type="button" class="added-notification__close" aria-label="{{ 'general.icon_labels.close' | t | escape }}">
            {%- render 'icon-close' -%}
          </button>
        </div>
      </added-notification>
    </template>
  {%- endif -%}


<script>
// Full Screen Navigation Display for Accessibility
const leftNavAll = document.querySelectorAll(".navigation--left .navigation__item--with-children a[aria-expanded]");

leftNavAll.forEach((e, i) => {
    let selector;

    if (e.parentElement.classList.contains('navigation__item--with-mega-menu')) {
        selector = ".navigation--main .navigation__item--with-mega-menu";
    } else {
        selector = ".navigation--main .navigation__item--with-small-menu";
    }

    e.addEventListener('focus', () => {
        const cont = document.querySelector("#" + e.getAttribute('aria-controls')).parentElement;
        const links = cont.querySelectorAll(".navigation__tier-2-container a");
        const first = links[0];
        const last = links[links.length - 1];

        // Show the children and set aria-expanded="true"
        cont.classList.add("navigation__item--show-children");
        e.setAttribute('aria-expanded', 'true');

        e.addEventListener('keydown', (ev) => {
            if (ev.key == "Tab") {
                if (ev.shiftKey) {
                    cont.classList.remove("navigation__item--show-children");
                    e.setAttribute('aria-expanded', 'false');  // Set aria-expanded="false" when collapsing
                } else {
                    ev.preventDefault();
                    cont.querySelector(".navigation__tier-2 a").focus()
                }
            }
        });

        first.addEventListener("keydown", (ev) => {
            if (ev.key == "Tab" && ev.shiftKey) {
                ev.preventDefault();
                cont.classList.remove("navigation__item--show-children");
                e.setAttribute('aria-expanded', 'false');  // Set aria-expanded="false" when collapsing
                e.focus();
            }
        });

        last.addEventListener("keydown", (ev) => {
            if (ev.key == "Tab" && !ev.shiftKey) {
                ev.preventDefault();
                cont.classList.remove("navigation__item--show-children");
                e.setAttribute('aria-expanded', 'false');  // Set aria-expanded="false" when collapsing
                if (i === (leftNavAll.length - 1)) {
                    document.querySelector("a.logo__link").focus();
                } else {
                    leftNavAll[i + 1].focus();
                }
            }
        });
    });
});

// Expanded and Collapsed Feature for Filter Options on Collection Pages
document.addEventListener('DOMContentLoaded', () => {
    const dropdowns = document.querySelectorAll('.filter-group__heading');

    dropdowns.forEach(dropdown => {
        // Set the role to 'combobox' for accessibility
        dropdown.setAttribute('role', 'combobox');
        dropdown.setAttribute('aria-haspopup', 'true');
        dropdown.setAttribute('aria-expanded', 'false');

        dropdown.addEventListener('keydown', (event) => {
            if (event.key === 'Enter') {
                const isExpanded = dropdown.getAttribute('aria-expanded') === 'true';
                const newState = !isExpanded;

                // Update the aria-expanded attribute
                dropdown.setAttribute('aria-expanded', newState);

                // Create an announcement message
                const announcement = newState ? 'Dropdown expanded' : 'Dropdown collapsed';
                announce(announcement);
            }
        });
    });

    function announce(message) {
        const liveRegion = document.createElement('div');
        liveRegion.setAttribute('role', 'alert');
        liveRegion.setAttribute('aria-live', 'assertive');
        liveRegion.style.position = 'absolute';
        liveRegion.style.width = '1px';
        liveRegion.style.height = '1px';
        liveRegion.style.padding = '0';
        liveRegion.style.overflow = 'hidden';
        liveRegion.style.clip = 'rect(0, 0, 0, 0)';
        liveRegion.style.border = '0';

        liveRegion.textContent = message;

        document.body.appendChild(liveRegion);

        // Remove the live region after a short delay
        setTimeout(() => {
            document.body.removeChild(liveRegion);
        }, 1000);
    }
});
  
  setTimeout(() => {
    let klavImg = document.querySelectorAll(".kl-private-reset-css-Xuajs1 img")
      if (klavImg) {
        for (let i = 0; i < klavImg.length; i ++) {
          klavImg[i].setAttribute("alt","What bugs are you dealing with?")
        }
      }
  }, 1250)
</script>
</body>
</html>
